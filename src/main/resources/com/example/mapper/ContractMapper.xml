<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.ContractMapper" >
  
  <resultMap id="BaseResultMap" type="com.example.domain.Contract" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="contractor_id" property="contractorId" jdbcType="INTEGER" />
    <result column="joint_guarantor_id" property="jointGuarantorId" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="building_id" property="buildingId" jdbcType="INTEGER" />
    <result column="rent" property="rent" jdbcType="INTEGER" />
    <result column="deposit" property="deposit" jdbcType="INTEGER" />
    <result column="dues_id" property="duesId" jdbcType="INTEGER" />
    <result column="bank_id" property="bankId" jdbcType="INTEGER" />
    <result column="start_at" property="startAt" jdbcType="DATE" />
    <result column="end_at" property="endAt" jdbcType="DATE" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updater_id" property="updaterId" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <association property="contractor" resultMap="contractorMap"></association>
    <association property="jointGuarantor" resultMap="jointGuarantorMap"></association>
    <association property="shop" resultMap="shopMap"></association>
    <association property="building" resultMap="buildingMap"></association>
    <association property="due" resultMap="dueMap"></association>
    <association property="bank" resultMap="bankMap"></association>
    <association property="creator" resultMap="adminMap"></association>
    <association property="updater" resultMap="adminMap"></association>
  </resultMap>
  
  <!--契約者  -->
  <resultMap type="com.example.domain.Contractor" id="contractorMap">
  	<id property="id" column="id"/>
  	<result column="name" property="name"/>
  	<result column="email" property="email"/>
  	<result column="zipcode" property="zipcode"/>
  	<result column="address" property="address"/>
  	<result column="tel" property="tel"/>
  	<result column="birthday" property="birthday"/>
  	<result column="shop_id" property="shopId"/>
  	<result column="joint_guarantor_id" property="jointGuarantorId"/>
  	<result column="comment" property="comment"/>
  	<result column="creator_id" property="creatorId"/>
  	<result column="created_at" property="createdAt"/>
  	<result column="updater_id" property="updaterId"/>
  	<result column="updated_at" property="updatedAt"/>
  	<result column="version" property="version"/>
  	<association property="jointGuarantor" resultMap="jointGuarantorMap"></association>
  </resultMap>
  
  <!-- 連帯保証人 -->
  <resultMap type="com.example.domain.JointGuarantor" id="jointGuarantorMap">
  	<id property="id" column="id"/>
  	<result column="name" property="name"/>
  	<result column="email" property="email"/>
  	<result column="zipcode" property="zipcode"/>
  	<result column="address" property="address"/>
  	<result column="tel" property="tel"/>
  	<result column="birthday" property="birthday"/>
  	<result column="relation_id" property="relationId"/>
  	<result column="comment" property="comment"/>
  	<result column="creator_id" property="creatorId"/>
  	<result column="created_at" property="createdAt"/>
  	<result column="updater_id" property="updaterId"/>
  	<result column="updated_at" property="updatedAt"/>
  	<result column="version" property="version"/>
  </resultMap>
  
  <!--  -->
  <resultMap type="com.example.domain.Shop" id="shopMap">
  	<id property="id" column="id"/>
  	<result column="building_id" property="buildingId"/>
  	<result column="shop_name" property="shopName"/>
  	<result column="insta_url" property="instaUrl"/>
  	<result column="fb_url" property="fbUrl"/>
  	<result column="twt_url" property="twtUrl"/>
  	<result column="hp_url" property="hpUrl"/>
  	<result column="comment" property="comment"/>
  	<result column="creator_id" property="creatorId"/>
  	<result column="created_at" property="createdAt"/>
  	<result column="updater_id" property="updaterId"/>
  	<result column="updated_at" property="updatedAt"/>
  	<result column="version" property="version"/>
  </resultMap>
  
  <resultMap type="com.example.domain.Building" id="buildingMap">
  	<id property="id" column="id"/>
  	<result column="building_name" property="buildingName"/>
  	<result column="building_zipcode" property="buildingZipcode"/>
  	<result column="building_address" property="buildingAddress"/>
  	<result column="comment" property="comment"/>
  	<result column="creator_id" property="creatorId"/>
  	<result column="created_at" property="createdAt"/>
  	<result column="updater_id" property="updaterId"/>
  	<result column="updater_at" property="updaterAt"/>
  	<result column="version" property="version"/>
  </resultMap>
  
  <resultMap type="com.example.domain.Due" id="dueMap">
  	<id property="id" column="id"/>
  	<result column="price" property="price"/>
  	<result column="creator_id" property="creatorId"/>
  	<result column="created_at" property="createdAt"/>
  	<result column="updater_id" property="updaterId"/>
  	<result column="updated_at" property="updatedAt"/>
  	<result column="version" property="version"/>
  </resultMap>
  
  <resultMap type="com.example.domain.Bank" id="bankMap">
  	<id property="id" column="id"/>
  	<result column="bank_name" property="bankName"/>
  	<result column="branch_name" property="branchName"/>
  	<result column="account_number" property="accountNumber"/>
  	<result column="creator_id" property="creatorId"/>
  	<result column="created_at" property="createdAt"/>
  	<result column="updater_id" property="updaterId"/>
  	<result column="updated_at" property="updatedAt"/>
  	<result column="version" property="version"/>
  </resultMap>
  
  <resultMap type="com.example.domain.Admin" id="adminMap">
  	<id property="id" column="id"/>
  	<result column="name" property="name"/>
  	<result column="email" property="email"/>
  	<result column="zipcode" property="zipcode"/>
  	<result column="address" property="address"/>
  	<result column="tel" property="tel"/>
  	<result column="password" property="password"/>
  	<result column="created_at" property="createdAt"/>
  	<result column="updated_at" property="updatedAt"/>
  </resultMap>
  
  
  <sql id="Example_Where_Clause" >
    
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
  
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, contractor_id, joint_guarantor_id, shop_id, building_id, rent, deposit, dues_id, 
    bank_id, start_at, end_at, comment, creator_id, created_at, updater_id, updated_at, 
    version
  </sql>
  
  <!-- 契約情報全件検索 -->
  <select id="selectAll" resultMap="BaseResultMap">
  	SELECT 
  		*
  	FROM
  		contracts c
  	LEFT OUTER JOIN
  		contractors cs
  	ON
  		c.contractor_id = cs.id
  	LEFT OUTER JOIN
  		joint_guarantors jg
  	ON	
  		c.joint_guarantor_id = jg.id
  	LEFT OUTER JOIN
  	    shops s
  	ON
  		c.shop_id = s.id
  	LEFT OUTER JOIN
  		buildings bg
  	ON
  		c.building_id = bg.id
  	LEFT OUTER JOIN
  	    dues d
  	ON
  		c.dues_id = d.id
  	LEFT OUTER JOIN
  		banks b
  	ON 
  		c.bank_id = b.id
  	LEFT OUTER JOIN 
  		admins a
  	ON 
  		c.creator_id = a.id
  	AND
  		c.updater_id = a.id
  	ORDER BY 
  		c.building_id ASC
  </select>
  
  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
   SELECT 
  		*
  	FROM
  		contracts c
  	LEFT OUTER JOIN
  		contractors cs
  	ON
  		c.contractor_id = cs.id
  	LEFT OUTER JOIN
  		joint_guarantors jg
  	ON	
  		c.joint_guarantor_id = jg.id
  	LEFT OUTER JOIN
  	    shops s
  	ON
  		c.shop_id = s.id
  	LEFT OUTER JOIN
  		buildings bg
  	ON
  		c.building_id = bg.id
  	LEFT OUTER JOIN
  	    dues d
  	ON
  		c.dues_id = d.id
  	LEFT OUTER JOIN
  		banks b
  	ON 
  		c.bank_id = b.id
  	LEFT OUTER JOIN 
  		admins a
  	ON 
  		c.creator_id = a.id
  	AND
  		c.updater_id = a.id
    WHERE
    	c.id = #{id,jdbcType=INTEGER}
  </select>
  
  
  
  
  
  
  
  
  
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.example.ContractExample" >
   
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contracts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
   
    delete from contracts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.example.ContractExample" >
  
    delete from contracts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.domain.Contract" >
    
   
    insert into contracts (id, contractor_id, joint_guarantor_id, 
      shop_id, building_id, rent, 
      deposit, dues_id, bank_id, 
      start_at, end_at, comment, 
      creator_id, created_at, updater_id, 
      updated_at, version)
    values (#{id,jdbcType=INTEGER}, #{contractorId,jdbcType=INTEGER}, #{jointGuarantorId,jdbcType=INTEGER}, 
      #{shopId,jdbcType=INTEGER}, #{buildingId,jdbcType=INTEGER}, #{rent,jdbcType=INTEGER}, 
      #{deposit,jdbcType=INTEGER}, #{duesId,jdbcType=INTEGER}, #{bankId,jdbcType=INTEGER}, 
      #{startAt,jdbcType=DATE}, #{endAt,jdbcType=DATE}, #{comment,jdbcType=VARCHAR}, 
      #{creatorId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updaterId,jdbcType=INTEGER}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.domain.Contract" >
   
    insert into contracts
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contractorId != null" >
        contractor_id,
      </if>
      <if test="jointGuarantorId != null" >
        joint_guarantor_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="rent != null" >
        rent,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="duesId != null" >
        dues_id,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="startAt != null" >
        start_at,
      </if>
      <if test="endAt != null" >
        end_at,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updaterId != null" >
        updater_id,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contractorId != null" >
        #{contractorId,jdbcType=INTEGER},
      </if>
      <if test="jointGuarantorId != null" >
        #{jointGuarantorId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null" >
        #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="rent != null" >
        #{rent,jdbcType=INTEGER},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=INTEGER},
      </if>
      <if test="duesId != null" >
        #{duesId,jdbcType=INTEGER},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="startAt != null" >
        #{startAt,jdbcType=DATE},
      </if>
      <if test="endAt != null" >
        #{endAt,jdbcType=DATE},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.example.ContractExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 04 12:08:48 JST 2020.
    -->
    select count(*) from contracts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 04 12:08:48 JST 2020.
    -->
    update contracts
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.contractorId != null" >
        contractor_id = #{record.contractorId,jdbcType=INTEGER},
      </if>
      <if test="record.jointGuarantorId != null" >
        joint_guarantor_id = #{record.jointGuarantorId,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.buildingId != null" >
        building_id = #{record.buildingId,jdbcType=INTEGER},
      </if>
      <if test="record.rent != null" >
        rent = #{record.rent,jdbcType=INTEGER},
      </if>
      <if test="record.deposit != null" >
        deposit = #{record.deposit,jdbcType=INTEGER},
      </if>
      <if test="record.duesId != null" >
        dues_id = #{record.duesId,jdbcType=INTEGER},
      </if>
      <if test="record.bankId != null" >
        bank_id = #{record.bankId,jdbcType=INTEGER},
      </if>
      <if test="record.startAt != null" >
        start_at = #{record.startAt,jdbcType=DATE},
      </if>
      <if test="record.endAt != null" >
        end_at = #{record.endAt,jdbcType=DATE},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorId != null" >
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updaterId != null" >
        updater_id = #{record.updaterId,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 04 12:08:48 JST 2020.
    -->
    update contracts
    set id = #{record.id,jdbcType=INTEGER},
      contractor_id = #{record.contractorId,jdbcType=INTEGER},
      joint_guarantor_id = #{record.jointGuarantorId,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      building_id = #{record.buildingId,jdbcType=INTEGER},
      rent = #{record.rent,jdbcType=INTEGER},
      deposit = #{record.deposit,jdbcType=INTEGER},
      dues_id = #{record.duesId,jdbcType=INTEGER},
      bank_id = #{record.bankId,jdbcType=INTEGER},
      start_at = #{record.startAt,jdbcType=DATE},
      end_at = #{record.endAt,jdbcType=DATE},
      comment = #{record.comment,jdbcType=VARCHAR},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updater_id = #{record.updaterId,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.domain.Contract" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 04 12:08:48 JST 2020.
    -->
    update contracts
    <set >
      <if test="contractorId != null" >
        contractor_id = #{contractorId,jdbcType=INTEGER},
      </if>
      <if test="jointGuarantorId != null" >
        joint_guarantor_id = #{jointGuarantorId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null" >
        building_id = #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="rent != null" >
        rent = #{rent,jdbcType=INTEGER},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=INTEGER},
      </if>
      <if test="duesId != null" >
        dues_id = #{duesId,jdbcType=INTEGER},
      </if>
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="startAt != null" >
        start_at = #{startAt,jdbcType=DATE},
      </if>
      <if test="endAt != null" >
        end_at = #{endAt,jdbcType=DATE},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.domain.Contract" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 04 12:08:48 JST 2020.
    -->
    update contracts
    set contractor_id = #{contractorId,jdbcType=INTEGER},
      joint_guarantor_id = #{jointGuarantorId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER},
      building_id = #{buildingId,jdbcType=INTEGER},
      rent = #{rent,jdbcType=INTEGER},
      deposit = #{deposit,jdbcType=INTEGER},
      dues_id = #{duesId,jdbcType=INTEGER},
      bank_id = #{bankId,jdbcType=INTEGER},
      start_at = #{startAt,jdbcType=DATE},
      end_at = #{endAt,jdbcType=DATE},
      comment = #{comment,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updater_id = #{updaterId,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>